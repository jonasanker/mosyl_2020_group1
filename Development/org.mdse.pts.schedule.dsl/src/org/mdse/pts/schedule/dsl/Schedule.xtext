grammar org.mdse.pts.schedule.dsl.Schedule with org.eclipse.xtext.common.Terminals

import "http://mdse.org/pts/network" as network
import "http://mdse.org/pts/depot" as depot
import "http://mdse.org/pts/common" as common
import "http://mdse.org/pts/schedule"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Schedule:
	"schedule" "for" network=[network::Network] "with" depots+=[depot::Depot] ("," depots+=[depot::Depot])*
	trainschedules+=TrainSchedule ("," trainschedules+=TrainSchedule)*
;

TrainSchedule:
	"train" train=[depot::Train]
	frequencies+=Frequency ("," frequencies+=Frequency)*
	route=Route
;

Frequency:
	"on" day+=DepartureDay ("," day+=DepartureDay)* "at" time+=Time ("," time+=Time)*
;

Route:
	stops+=StartStop ("," stops+=IntermediateStop)* ("," stops+=TerminateStop)
;

StartStop returns Stop:
	"start" "at" station=[network::Station] "on" "platform" platform=INT
;

IntermediateStop returns Stop:
	("drive" "via" via=[network::Leg])?
	"stop" "at" station=[network::Station] "on" "platform" platform=INT "for" duration=INT "min"
	(shouldTurnAround?="and" "turn" "around")?
;

TerminateStop returns Stop:
	("drive" "via" via=[network::Leg])?
	"terminate" "at" station=[network::Station] "on" "platform" platform=INT
;

Time returns common::Time:
	hours=INT ':' minutes=INT;

DepartureDay:
	weekday=WeekDay
;

enum WeekDay returns common::WeekDay:
	MONDAY = 'MONDAY' | 
	TUESDAY = 'TUESDAY' | 
	WEDNESDAY = 'WEDNESDAY' | 
	THURSDAY = 'THURSDAY' | 
	FRIDAY = 'FRIDAY' | 
	SATURDAY = 'SATURDAY' | 
	SUNDAY = 'SUNDAY'
;